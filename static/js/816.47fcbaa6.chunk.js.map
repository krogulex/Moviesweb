{"version":3,"file":"static/js/816.47fcbaa6.chunk.js","mappings":"sNAgEA,UAzDc,WACZ,OAAwCA,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEA,GAAsCC,EAAAA,EAAAA,UAAS,MAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAEMC,EAAQL,EAAaM,IAAI,UAE/BC,EAAAA,EAAAA,YAAU,WACM,KAAVF,GAA0B,OAAVA,GACpBG,EAAgBH,EAEjB,GAAE,CAACA,IAEJ,IAQMG,EAAkB,SAAAH,IACtBI,EAAAA,EAAAA,IAAgBJ,GACbK,MAAK,SAAAC,GACJP,EAAeO,EAASC,KAAKC,QAC9B,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,EAED,OACE,iBAAKG,UAAU,oBAAf,WACE,eAAIA,UAAU,cAAd,uCACA,kBAAMA,UAAU,eAAeC,SAnBd,SAAAC,GACnBA,EAAMC,iBACN,IAAMC,EAAOF,EAAMG,cACbC,EAAQJ,EAAMK,OAAOD,MAAME,MACjCJ,EAAKK,QACL1B,EAAgB,CAAEI,MAAOmB,GAC1B,EAaG,WACE,kBACEN,UAAU,gBACVU,KAAK,OACLC,KAAK,QACLC,YAAY,eAEd,mBAAQZ,UAAU,iBAAiBU,KAAK,SAAxC,uBAIDzB,IACC,4BACE,SAAC,IAAD,CACE4B,OAAQ5B,EACR6B,KAAM,CAAEA,KAAK,gBAAD,OAAkB3B,IAC9B4B,GAAI,MAEJ,SAAC,IAAD,SAKX,C,6EC5DYC,EAAS,WACpB,OACE,6BACE,gBAAIhB,UAAU,iBAAd,WACE,gBAAKA,UAAU,oBAAf,UACE,gBAAKiB,KAAI,UAAKC,EAAAA,EAAL,sBAFb,qDAQL,C,wDCoBD,IA7BkB,SAAC,GAA0B,IAAxBL,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,KAAMC,EAAS,EAATA,GACjC,OACQ,eAAIf,UAAU,cAAd,SACHa,EAAOM,KAAI,SAAAC,GACV,OACE,eAAmBpB,UAAU,cAA7B,UACE,UAAC,KAAD,CAAMe,GAAE,UAAKA,GAAL,OAAUK,EAAMC,IAAMC,MAAO,CAACR,KAAAA,GAAtC,UACCM,EAAMG,aACL,gBACAC,IAAG,yCAAoCJ,EAAMG,aAC7CE,IAAKL,EAAMM,eACX1B,UAAU,gBAGV,gBAAKA,UAAU,aAAawB,IAAKG,EAASF,IAAI,SAE9C,gBAAKzB,UAAU,iBAAf,UACE,wBAAKoB,EAAMM,uBAZRN,EAAMC,GAiBlB,KAKN,C","sources":["Pages/Movie/Movie.jsx","components/Footer/Footer.jsx","components/MovieList/MovieList.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchQueryMovie } from 'fetching/fetchingMovies';\n\nimport MovieList from 'components/MovieList/MovieList';\nimport { Footer } from 'components/Footer/Footer';\n\nconst Movie = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const [queryMovies, setQueryMovies] = useState(null);\n\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (query === '' || query === null) return;\n    loadQueryMovies(query);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [query]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    const input = event.target.input.value;\n    form.reset();\n    setSearchParams({ query: input });\n  };\n\n  const loadQueryMovies = query => {\n    fetchQueryMovie(query)\n      .then(response => {\n        setQueryMovies(response.data.results);\n      })\n      .catch(error => console.log(error));\n  };\n\n  return (\n    <div className=\"movies__container\">\n      <h1 className=\"home-slogan\">Search for desired movie</h1>\n      <form className=\"search__form\" onSubmit={handleSubmit}>\n        <input\n          className=\"search__input\"\n          type=\"text\"\n          name=\"input\"\n          placeholder=\"Search...\"\n        />\n        <button className=\"search__button\" type=\"submit\">\n          Search\n        </button>\n      </form>\n      {queryMovies && (\n        <div>\n          <MovieList\n            movies={queryMovies}\n            from={{ from: `/movie?query=${query}` }}\n            to={''}\n          ></MovieList>\n            <Footer></Footer>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Movie;\n","import icons from '../../icons/symbol-defs.svg';\n\nexport const Footer = () => {\n  return (\n    <footer>\n      <h5 className=\"footer__slogan\">\n        <svg className=\"icon footer__icon\">\n          <use href={`${icons}#icon-movieweb`}></use>\n        </svg>\n        MOVIEWEB - The best page for movie enthusiast!\n      </h5>\n    </footer>\n  );\n};\n","import { Link } from 'react-router-dom';\n\nimport noImage from '../../images/no-image.jpg';\n\nconst MovieList = ({ movies, from, to }) => {\n  return (\n          <ul className=\"movie__list\">\n      {movies.map(movie => {\n        return (\n          <li key={movie.id} className=\"movie__card\">\n            <Link to={`${to}${movie.id}`} state={{from}}>\n            {movie.poster_path ? (\n              <img\n              src={`http://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n              alt={movie.original_title}\n              className=\"movie__img\"\n            />\n            ) : (\n              <img className=\"movie__img\" src={noImage} alt=\"...\"></img>\n            )}\n              <div className=\"movie__overlay\">\n                <h3>{movie.original_title}</h3>\n              </div>\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n\n    \n  );\n};\n\nexport default MovieList;\n"],"names":["useSearchParams","searchParams","setSearchParams","useState","queryMovies","setQueryMovies","query","get","useEffect","loadQueryMovies","fetchQueryMovie","then","response","data","results","catch","error","console","log","className","onSubmit","event","preventDefault","form","currentTarget","input","target","value","reset","type","name","placeholder","movies","from","to","Footer","href","icons","map","movie","id","state","poster_path","src","alt","original_title","noImage"],"sourceRoot":""}